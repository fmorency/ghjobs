name: ci
on:
  - pull_request
  - push

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true

      - name: Generate random cache key to ensure the cache directories are saved after build
        id: random-cache-key
        run: echo "::set-output name=key::$(xxd -u -l 16 -p /dev/urandom)"

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ steps.random-cache-key.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --release

  test:
    name: Tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Generate random cache key to ensure the cache directories are saved after build
        id: random-cache-key
        run: echo "::set-output name=key::$(xxd -u -l 16 -p /dev/urandom)"
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ steps.random-cache-key.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Test
        run: cargo test --release