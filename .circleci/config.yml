# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  codecov: codecov/codecov@1.0.2

rust_cache: &rust_cache
  paths:
    - ~/.cargo/bin/
    - ~/.cargo/registry/index/
    - ~/.cargo/registry/cache/
    - ~/.cargo/git/db/
    - target/

rust_install_cmd: &rust_install_cmd
  name: "install rust"
  command: "curl https://sh.rustup.rs -sSf | sh -s -- --profile minimal --default-toolchain nightly -y -c rustfmt -c llvm-tools-preview -c clippy && source $HOME/.cargo/env"

executors:
  linux:
    machine:
      image: ubuntu-2004:2022.04.1
  macos:
    macos:
      xcode: 13.4.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  lint:
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ghjobs-build-{{ arch }}-{{ checksum "Cargo.lock" }}
            - v1-ghjobs-build-{{ arch }}-
      - run:
          <<: *rust_install_cmd
      - run:
          name: "fmt"
          command: "cargo fmt --all -- --check"
      - run:
          name: "clippy"
          command: "cargo clippy --all-targets --all-features -- -D clippy::all"

  build:
    parameters:
      os:
        type: executor
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    executor: << parameters.os >>
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ghjobs-build-{{ arch }}-{{ checksum "Cargo.lock" }}
            - v1-ghjobs-build-{{ arch }}-
      - run:
          <<: *rust_install_cmd
      - run:
          name: "build"
          command: "cargo build --all-features"
      - save_cache:
          key: v1-ghjobs-build-{{ arch }}-{{ checksum "Cargo.lock" }}
          <<: *rust_cache
  test:
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-ghjobs-test-{{ arch }}-{{ checksum "Cargo.lock" }}
          - v1-ghjobs-test-{{ arch }}-
          - v1-ghjobs-build-{{ arch }}-{{ checksum "Cargo.lock" }}
          - v1-ghjobs-build-{{ arch }}-
      - run:
          <<: *rust_install_cmd
      - run:
          name: "test"
          command: "cargo test --lib --all-targets --all-features"
#      - run:
#          name: "doc test"
#          command: "cargo test --all-features --doc"
      - save_cache:
          key: v1-ghjobs-test-{{ arch }}-{{ checksum "Cargo.lock" }}
          <<: *rust_cache
  coverage:
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ghjobs-coverage-{{ arch }}-{{ checksum "Cargo.lock" }}
            - v1-ghjobs-coverage-{{ arch }}-
            - v1-ghjobs-test-{{ arch }}-{{ checksum "Cargo.lock" }}
            - v1-ghjobs-test-{{ arch }}-
            - v1-ghjobs-build-{{ arch }}-{{ checksum "Cargo.lock" }}
            - v1-ghjobs-build-{{ arch }}-
      - run:
          <<: *rust_install_cmd
      - run:
          name: "install grcov"
          command: "cargo install grcov --root target/"
      - run:
          name: "generate test coverage"
          command: "RUSTFLAGS=\"-C instrument-coverage\" LLVM_PROFILE_FILE=\"coverage/lcov-%p-%m.profraw\" cargo test --lib --all-targets --all-features"
      - run:
          name: "generate coverage report"
          command: "target/bin/grcov coverage --binary-path target/debug/ -s . --keep-only 'src/**' --prefix-dir $PWD -t lcov --branch --ignore-not-existing -o coverage/report.lcov"
      - codecov/upload:
          file: coverage/report.lcov
      - save_cache:
          key: v1-ghjobs-coverage-{{ arch }}-{{ checksum "Cargo.lock" }}
          <<: *rust_cache


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  ci:
    jobs:
      - lint:
          name: lint-v<< matrix.os >>
          matrix:
            parameters:
              os: [linux]
      - build:
          name: build-v<< matrix.os >>
          matrix:
            parameters:
              os: [linux, macos]
      - test:
          name: test-v<< matrix.os >>
          matrix:
            parameters:
              os: [linux, macos]
          requires:
            - build-v<< matrix.os >>
      - coverage:
          name: coverage-v<< matrix.os >>
          matrix:
            parameters:
              os: [linux]
          requires:
            - test-v<< matrix.os >>
